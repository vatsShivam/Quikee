{"ast":null,"code":"var _jsxFileName = \"/home/shivam/kycintern/example-create-react-app-express/client/src/components/ApplyCoupon.js\";\nimport React, { Component } from 'react';\nimport CanvasJSReact from './canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass SplineAreaChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: 100,\n      pdf: 200\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/statics\").then(resp => {\n      console.log(resp.data); // let Rating = [\n      //   { title: \"Grntee \", value: res[\"Grntee\"] },\n      //   { title: \"Rating \", value: res[\"Rating\"] },\n      //   { title: \"Rating_Agency \", value: res[\"Rating_Agency\"] }\n      // this.setState({response:resp.data})\n      // ];\n    }).catch(error => {\n      // this.setState({ error, isLoading: false })\n      console.log(error);\n    });\n  }\n\n  render() {\n    const image = \"SHIVAm\";\n    const options = {\n      animationEnabled: true,\n      exportEnabled: true,\n      theme: \"light2\",\n      //\"light1\", \"dark1\", \"dark2\"\n      title: {\n        text: \"Graph Showing type of Uploaded files\"\n      },\n      data: [{\n        type: \"pie\",\n        //change type to bar, line, area, pie, etc\n        //indexLabel: \"{y}\", //Shows y value on all Data Points\n        indexLabelFontColor: \"#5A5757\",\n        indexLabelPlacement: \"outside\",\n        dataPoints: [{\n          y: this.state.image,\n          label: \"Airfare\"\n        }, {\n          y: this.state.pdf,\n          label: \"Food & Drinks\"\n        }]\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CanvasJSChart, {\n      options: options\n      /* onRef={ref => this.chart = ref} */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default SplineAreaChart;","map":{"version":3,"sources":["/home/shivam/kycintern/example-create-react-app-express/client/src/components/ApplyCoupon.js"],"names":["React","Component","CanvasJSReact","CanvasJSChart","SplineAreaChart","constructor","props","state","image","pdf","componentDidMount","axios","get","then","resp","console","log","data","catch","error","render","options","animationEnabled","exportEnabled","theme","title","text","type","indexLabelFontColor","indexLabelPlacement","dataPoints","y","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,IAAIC,aAAa,GAAGD,aAAa,CAACC,aAAlC;;AAEA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AACtCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACE,SAAKC,KAAL,GAAa;AACVC,MAAAA,KAAK,EAAC,GADI;AAEVC,MAAAA,GAAG,EAAC;AAFM,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CACFC,GADH,CAEI,UAFJ,EAKGC,IALH,CAKSC,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB,EADc,CAEd;AACA;AACA;AACA;AACD;AACC;AACD,KAbH,EAcGC,KAdH,CAcUC,KAAD,IAAW;AAChB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,KAjBH;AAkBD;;AAECC,EAAAA,MAAM,GAAG;AACP,UAAMZ,KAAK,GAAC,QAAZ;AACA,UAAMa,OAAO,GAAG;AACdC,MAAAA,gBAAgB,EAAE,IADJ;AAEdC,MAAAA,aAAa,EAAE,IAFD;AAGdC,MAAAA,KAAK,EAAE,QAHO;AAGG;AACjBC,MAAAA,KAAK,EAAC;AACJC,QAAAA,IAAI,EAAE;AADF,OAJQ;AAOdT,MAAAA,IAAI,EAAE,CAAC;AACLU,QAAAA,IAAI,EAAE,KADD;AACQ;AACb;AACAC,QAAAA,mBAAmB,EAAE,SAHhB;AAILC,QAAAA,mBAAmB,EAAE,SAJhB;AAKLC,QAAAA,UAAU,EAAE,CACV;AAAEC,UAAAA,CAAC,EAAE,KAAKxB,KAAL,CAAWC,KAAhB;AAAuBwB,UAAAA,KAAK,EAAE;AAA9B,SADU,EAEV;AAAED,UAAAA,CAAC,EAAE,KAAKxB,KAAL,CAAWE,GAAhB;AAAqBuB,UAAAA,KAAK,EAAE;AAA5B,SAFU;AALP,OAAD;AAPQ,KAAhB;AAsBA,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAIX;AACxB;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADA;AAOE;;AA9DgC;;AAiExC,eAAejB,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport CanvasJSReact from './canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n \nclass SplineAreaChart extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n         image:100,\n         pdf:200\n      }\n   \n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        \"/statics\",\n      \n      )\n      .then((resp) => {\n        console.log(resp.data)\n        // let Rating = [\n        //   { title: \"Grntee \", value: res[\"Grntee\"] },\n        //   { title: \"Rating \", value: res[\"Rating\"] },\n        //   { title: \"Rating_Agency \", value: res[\"Rating_Agency\"] }\n       // this.setState({response:resp.data})\n        // ];\n      })\n      .catch((error) => {\n        // this.setState({ error, isLoading: false })\n        console.log(error);\n      });\n  }\n \n    render() {\n      const image=\"SHIVAm\";\n      const options = {\n        animationEnabled: true,\n        exportEnabled: true,\n        theme: \"light2\", //\"light1\", \"dark1\", \"dark2\"\n        title:{\n          text: \"Graph Showing type of Uploaded files\"\n        },\n        data: [{\n          type: \"pie\", //change type to bar, line, area, pie, etc\n          //indexLabel: \"{y}\", //Shows y value on all Data Points\n          indexLabelFontColor: \"#5A5757\",\n          indexLabelPlacement: \"outside\",\n          dataPoints: [\n            { y: this.state.image, label: \"Airfare\" },\n            { y: this.state.pdf, label: \"Food & Drinks\" }\n            \n          \n           \n          ]\n        }]\n      }\n      \n      return (\n      <div>\n        <CanvasJSChart options = {options} \n          /* onRef={ref => this.chart = ref} */\n        />\n        {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n      </div>\n      )}\n}\n\nexport default SplineAreaChart;                           "]},"metadata":{},"sourceType":"module"}