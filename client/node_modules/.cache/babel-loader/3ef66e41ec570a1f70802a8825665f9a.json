{"ast":null,"code":"var _jsxFileName = \"/home/shivam/kycintern/example-create-react-app-express/client/src/components/ApplyCoupon.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nexport class Linecharts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Data: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:61022/Api/Charts/Getrecord`).then(res => {\n      console.log(res);\n      const ipl = res.data;\n      let playername = ['vk', 'kl'];\n      let runscore = [400, 600]; // ipl.forEach(record => {  \n      //  playername.push(record.Playername);  \n      //  runscore.push(record.Runscore);  \n      //  });  \n\n      this.setState({\n        Data: {\n          labels: playername,\n          datasets: [{\n            label: 'IPL 2018/2019 Top Run Scorer',\n            data: runscore,\n            backgroundColor: [\"Blue\", \"Red\"]\n          }]\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: this.state.Data,\n      options: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }));\n  }\n\n}\nexport default Linecharts;","map":{"version":3,"sources":["/home/shivam/kycintern/example-create-react-app-express/client/src/components/ApplyCoupon.js"],"names":["React","Component","axios","Line","Linecharts","constructor","props","state","Data","componentDidMount","get","then","res","console","log","ipl","data","playername","runscore","setState","labels","datasets","label","backgroundColor","render","marginTop"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,iBAArB;AAEA,OAAO,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAElCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEX,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAEP;;AAEDC,EAAAA,iBAAiB,GAAG;AAEZP,IAAAA,KAAK,CAACQ,GAAN,CAAW,6CAAX,EAESC,IAFT,CAEcC,GAAG,IAAI;AAELC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEA,YAAMG,GAAG,GAAGH,GAAG,CAACI,IAAhB;AAEA,UAAIC,UAAU,GAAG,CAAC,IAAD,EAAM,IAAN,CAAjB;AAEA,UAAIC,QAAQ,GAAG,CAAC,GAAD,EAAK,GAAL,CAAf,CARK,CAUN;AACO;AAEA;AAER;;AACE,WAAKC,QAAL,CAAc;AAENX,QAAAA,IAAI,EAAE;AAEEY,UAAAA,MAAM,EAAEH,UAFV;AAIEI,UAAAA,QAAQ,EAAE,CAEF;AAEQC,YAAAA,KAAK,EAAE,8BAFf;AAIQN,YAAAA,IAAI,EAAEE,QAJd;AAMQK,YAAAA,eAAe,EAAE,CAEX,MAFW,EAI4D,KAJ5D;AANzB,WAFE;AAJZ;AAFA,OAAd;AA8BP,KAhDT;AAkDP;;AAEDC,EAAAA,MAAM,GAAG;AAED,wBAEQ;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEQ,oBAAC,IAAD;AAEQ,MAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWC,IAFzB;AAIQ,MAAA,OAAO,EAAE,EAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,CAFR;AAcP;;AAhFiC;AAqF1C,eAAeJ,UAAf","sourcesContent":[" \nimport React, { Component } from 'react'  \n\nimport axios from 'axios';  \n\nimport { Line } from 'react-chartjs-2';  \n\nexport class Linecharts extends Component {  \n\n        constructor(props) {  \n\n                super(props);  \n\n                this.state = { Data: {} };  \n\n        }  \n\n        componentDidMount() {  \n\n                axios.get(`http://localhost:61022/Api/Charts/Getrecord`)  \n\n                        .then(res => {  \n\n                                console.log(res);  \n\n                                const ipl = res.data;  \n\n                                let playername = ['vk','kl'];  \n\n                                let runscore = [400,600];  \n\n                               // ipl.forEach(record => {  \n                                      //  playername.push(record.Playername);  \n\n                                      //  runscore.push(record.Runscore);  \n\n                              //  });  \n                                this.setState({  \n\n                                        Data: {  \n\n                                                labels: playername,  \n\n                                                datasets: [  \n\n                                                        {  \n\n                                                                label: 'IPL 2018/2019 Top Run Scorer',  \n\n                                                                data: runscore,  \n\n                                                                backgroundColor: [  \n\n                                                                      \"Blue\",  \n                                                                    \n                                                                                                                                             \"Red\"  \n\n                                                                ]  \n\n                                                        }  \n\n                                                ]  \n\n                                        }  \n\n                                });  \n\n                        })  \n\n        }  \n\n        render() {  \n\n                return (  \n\n                        <div style={{marginTop:\"50px\"}}>  \n\n                                <Line  \n\n                                        data={this.state.Data}  \n\n                                        options={{ }} />  \n\n                        </div>  \n\n                )  \n\n        }  \n}  \n\n  \n\nexport default Linecharts  "]},"metadata":{},"sourceType":"module"}